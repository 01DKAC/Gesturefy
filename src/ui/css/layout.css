@font-face {
  font-family: "Icons";
  src: url("/res/fonts/icons.woff");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: "NunitoSans Regular";
  src: url("/res/fonts/NunitoSans-Regular.woff");
  font-weight: normal;
  font-style: normal;
}

* {
  margin: 0;
  padding: 0;
  border: none;
  outline: none;
}

html {
  font-family: "NunitoSans Regular", "Arial", sans-serif;
  font-size: 16px;
  color: var(--text-color);
}

input, select, button, textarea {
  font-size: 1rem;
  font-family: inherit;
  color: var(--text-color);
}

a {
  cursor: pointer;
  color: var(--highlighted-color);
  text-decoration: none;
}

a:hover, a:focus {
  text-decoration: underline;
}

em {
  color: var(--highlighted-color);
  text-decoration: underline;
  font-style: normal;
}

hr {
  border-bottom: 1px solid var(--borderSecond-color);
  margin: 20px 0;
}

/**
 * Icons classes
 **/

.icon-gear:after {
  content: "g";
  font-family: Icons;
}

.icon-arrows:after {
  content: "a";
  font-family: Icons;
}

.icon-star:after {
  content: "s";
  font-family: Icons;
}

.icon-list:after {
  content: "l";
  font-family: Icons;
}

.icon-info:after {
  content: "i";
  font-family: Icons;
}

.icon-arrow-up:after {
  content: "U";
  font-family: Icons;
}

.icon-arrow-right:after {
  content: "R";
  font-family: Icons;
}

.icon-arrow-down:after {
  content: "D";
  font-family: Icons;
}

.icon-arrow-left:after {
  content: "L";
  font-family: Icons;
}

.icon-delete:after {
  content: "X";
  font-family: Icons;
}

/**
* Commons classes
**/

.small-spacing {
  margin-bottom: 10px;
}

.medium-spacing {
  margin-bottom: 20px;
}

.align-content-right {
  display: flex;
  justify-content: flex-end;
}

.justify-text {
  text-align: justify;
}

.small-text {
  font-size: 14px;
}

/**
 * Option list layout
 **/

.option-list {}

.ol-section + .ol-section {
  border-top: 1px solid var(--borderSecond-color);
  padding-top: 20px;
  margin-top: 20px;
}

.ol-item {
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
}

.ol-item:not(:first-child) {
  margin-top: 10px;
}

.ol-collapsible .ol-item {
  margin-top: 10px;
}

.ol-collapsible {
  position: relative;
  overflow: hidden;
}

.ol-collapsible:after {
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 50px;
  background: linear-gradient(to bottom, transparent 0%, var(--baseSecond-color) 100%);
  visibility: hidden;
  opacity: 0;
  transition: visibility 0.3s, opacity 0.3s;
}

.ol-collapsible.animate {
  transition: height 0.5s;
}

/* gradient fade in/out */
.ol-collapsible.animate:after {
  visibility: visible;
  opacity: 1;
}

.ol-label {
  display: flex;
  flex-direction: column;
  align-items: left;
  justify-content: center;
  flex-grow: 1;
  flex-basis: 0;
  cursor: default;
}

.ol-input {
  width: 170px;
  display: flex;
  align-items: center;
  justify-content: right;
}

.ol-description {
  transition: opacity 0.3s;
  font-size: 14px;
  opacity: 0.5;
}

.ol-item:hover .ol-description {
  opacity: 1;
}

/**
 * Toggle button layout
 **/

.toggle-button {
  display: none;
}

.toggle-button + label {
  padding: 8px 0 6px 0;
  text-align: center;
  width: 45px;
  background: var(--base-color);
  border-radius: 2px;
  border: 1px solid var(--border-color);
  cursor: pointer;
  color: var(--textThird-color);
  transition: background 0.5s;
}

.toggle-button + label:after {
  content: "__MSG_toggleButtonOff__";
}

.toggle-button:checked + label:after {
  content: "__MSG_toggleButtonOn__";
}

.toggle-button:checked + label {
  background: var(--highlighted-color);
  border-color: var(--highlighted-color);
  color: var(--textSecond-color);
  font-weight: bold;
}

/**
 * Input field layout
 **/

.input-field {
  border-radius: 2px;
  padding: 5px;
  width: 140px;
  background: var(--base-color);
  border: 1px solid var(--border-color);
  box-sizing: border-box;
  text-align: center;
/*transition: color 0.3s;*/
  -moz-appearance: textfield;
  text-overflow: ellipsis ellipsis;
  color: var(--textThird-color);
}

.input-field:invalid {
  box-shadow: none;
  color: var(--warning-color);
  border-color: var(--warning-color);
}

/**
 * Color field layout
 **/

.color-select-field {
  height: 36px;
  width: 47px;
  padding: 5px;
  text-align: center;
  background: var(--base-color);
  border-radius: 2px;
  border: 1px solid var(--border-color);
  cursor: pointer;
}

/**
 * Select field layout
 **/

.select-wrapper {
  position: relative;
}

.select-wrapper:after {
  position: absolute;
  content: "D";
  font-family: Icons;
  font-size: 11px;
  top: 50%;
  right: 9px;
  pointer-events: none;
  color: var(--textThird-color);
  transform: translateY(-50%);
}

.select-field {
  width: 140px;
  padding: 4px 25px 4px 5px;
  border: 1px solid var(--border-color);
  box-sizing: border-box;
  -moz-appearance: none;
  appearance: none;
  text-align: center;
  border-radius: 2px;
  background-color: var(--base-color);
  text-overflow: ellipsis;
  color: var(--textThird-color);
}

/**
 * Text field layout
 **/

.text-field {
  border-radius: 2px;
  padding: 5px;
  resize: none;
  background: var(--base-color);
  border: 1px solid var(--border-color);
  box-sizing: border-box;
  color: var(--textThird-color);
  font-family: "NunitoSans Regular", "Arial", sans-serif;
}

/**
 * Regular button layout
 **/

.button {
  padding: 8px 6px 6px 6px;
  text-align: center;
  min-width: 142px;
  background: var(--base-color);
  border-radius: 2px;
  border: 1px solid var(--border-color);
  cursor: pointer;
  color: var(--textThird-color);
  box-sizing: border-box;
}

label.button > span {
  color: inherit;
}

.button + .button {
  margin-left: 15px;
}

.button:hover, .button:hover * {
  color: var(--highlighted-color);
  border-color: var(--highlighted-color);
  text-decoration: none;
}

.button.danger:hover *, .button.danger:hover{
  color: var(--warning-color);
  border-color: var(--warning-color);
}

/**
 * Collapse button layout
 **/

.collapseButton {
  display: none;
}

.collapseButton + label {
  cursor: pointer;
  color: var(--highlighted-color);
}

.collapseButton + label:after {
  content: "D";
  display: inline-block;
  font-family: Icons;
  font-size: 11px;
  margin-left: 5px;
  transition: transform 0.3s;
}

.collapseButton:checked + label:after {
  transform:rotate(-180deg);
}

/**
 * Command select field layout
 **/

.command-select-field {
  position: relative;
  width: 140px;
  padding: 5px 28px 5px 10px;
  border: 1px solid var(--border-color);
  box-sizing: border-box;
  text-align: center;
  border-radius: 2px;
  background-color: var(--base-color);
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
  cursor: pointer;
  color: var(--textThird-color);
}

.command-select-field:before {
  content: attr(title);
}

.command-select-field:after {
  content: "c";
  position: absolute;
  top: 50%;
  right: 7px;
  font-size: 11px;
  font-family: Icons;
  transform: translateY(-50%);
}

.command-select-field:hover:after {
  color: var(--highlighted-color);
}

.pop-out-animation {
  animation-duration: 0.2s;
  animation-timing-function: ease;
  animation-name: PopOut;
}

@keyframes PopOut {
  from {transform: scale(1)}
  50% {transform: scale(1.1)}
  to {transform: scale(1)}
}

/**
 * Horizontal list layout
 **/

.horizontal-list {
  padding: 5px 0;
  list-style: none;
  display: flex;
  flex-direction: row;
  align-items: baseline;
}

.horizontal-list > li:not(:last-child):after {
  content: "\25CF";
  color: var(--border-color);
  padding: 0 10px;
}

/**
 * Gesture list layout
 **/

.gesture-list {}

.gl-item {
  position: relative;
  display: flex;
  border-radius: 2px;
  list-style: none;
  flex-direction: row;
  flex-wrap: wrap;
  border: solid 1px var(--border-color);
  background-color: var(--base-color);
  box-shadow: none;
  transition: box-shadow 0.3s;
  min-width: 0;
  cursor: pointer;
  color: var(--textThird-color);
}

.gl-item + .gl-item {
  margin-top: 20px;
}

.gl-item:hover {
  box-shadow: 0 1px 2px var(--shadow-color);
}

.gl-action {
  position: relative;
  flex-grow: 1;
  padding: 15px 20px 10px 20px;
  color: inherit;
}

/* hidden sperator line which is only visible if the one of the flex items wrap */
.gl-action::after {
  content: "";
  position: absolute;
  border-bottom: solid 1px var(--border-color);
  width: 100%;
  bottom: -1px;
  left: 0;
}

.gl-gesture {
  font-family: "firefox-gesture-arrows";
  letter-spacing: 5px;
  padding: 15px 20px 10px 20px;
  text-align: left;
  text-transform: uppercase;
  font-size: 14px;
  color: inherit;
  word-break: break-all;
}

.gl-remove-button {
  position: absolute;
  top: 0;
  right: 0;
  transition: opacity 0.3s, transform 0.3s;
  opacity:0;


  cursor: pointer;
  transform: translate(50%, -50%) scale(0.7);
  border-radius: 50%;
  color: var(--base-color);
  line-height: 6px;
  text-align: center;
  width: 18px;
  height: 18px;
  font-size: 6px;
  font-family: Icons;
  background: var(--warning-color);
}

.gl-item:hover > .gl-remove-button {
  opacity:1;
  transform: translate(50%, -50%) scale(1);
  transition-delay: 0.1s;
}

/**
 * Blacklist layout
 **/

.bl-insert {
  --bl-EntryHeight: 40px;
  display: flex;
  height: var(--bl-EntryHeight);
}

.bl-label {
  display: block;
}

.bl-addAddress {
  flex: 1;
  text-align: left;
  padding-left: 9px;
  border: 1px solid var(--border-color);
  border-right: 0;
  border-radius: 2px 0 0 2px;
  background: var(--base-color);
  box-sizing: border-box;
  text-overflow: ellipsis ellipsis;
  color: var(--textThird-color);
}

.bl-add-button {
  text-align: center;
  width: 60px;
  height: 100%;
  background: var(--highlighted-color);
  color: var(--textSecond-color);
  border-color: var(--highlighted-color);
  border-radius: 0 2px 2px 0;
  font-size: 1.4rem;
}

.blacklist {
  width: 100%;
  padding-top: 20px;
}

.bl-emptyURLs {
  color: var(--text-color);
  opacity: 0.5;
  text-align: center;
  list-style-type: none;
  font-size: 1.1rem;
}

.bl-entry {
  --bl-EntryHeight: 40px;
  --bl-marginTop: 6px;
  z-index: -1;
  display: flex;
  height: var(--bl-EntryHeight);
  box-sizing: border-box;
  margin-bottom: var(--bl-marginTop);
  border-radius: 2px;
  animation-duration: .3s;
  animation-timing-function: ease;
  /*transition: box-shadow 0.3s;*/
}

.bl-entry:hover > .bl-entry-button{
  background: var(--base-color);
  border: 1px solid var(--border-color);
  border-radius: 0 2px 2px 0;
}

.bl-entry:hover > .bl-URLs {
  background: var(--base-color);
  border-color: var(--border-color);
  border-right: 0;
  border-radius: 2px 0 0 2px;
}

.bl-URLs {
  flex: 1;
  text-overflow: ellipsis;
  border: 1px solid transparent;
  background: inherit;
  padding: 0 0 0 9px;
  border-radius: 2px 0 0 2px;
}

.bl-entry-button {
  width: 60px;
  text-align: center;
  background: inherit;
}

.bl-entry-button:hover {
  color: var(--warning-color);
}

.bl-URLs:focus ~ .bl-entry-button {
  background: var(--base-color);
  border: 1px solid var(--border-color);
  border-radius: 0 2px 2px 0;
}

.bl-URLs:focus {
  background: var(--base-color);
  border-left: 1px solid var(--border-color);
  border-right: 0;
  border-bottom: 1px solid var(--border-color);
  border-top: 1px solid var(--border-color);
  border-radius: 2px 0 0 2px;
}

.bl-entry-animate {
   animation-name: animateAddEntry;
}

.bl-entry.bl-entry-animate:hover > .bl-entry-button, .bl-entry.bl-entry-animate:hover > .bl-URLs{
  background: none;
  border: none;
}

.bl-entry-animateItems:not(.bl-entry-animate) {
  animation-name: animateItemsAddEntry;
}

.bl-entry-animate--reverse {
  animation-name: animateDeleteEntry;
}

@keyframes animateDeleteEntry {
  from {opacity: 1; transform: scale(1); height: var(--bl-EntryHeight); margin-bottom: var(--bl-marginTop);}
  30% {visibility: hidden; opacity: 0; transform: scale(0.9); height: var(--bl-EntryHeight); margin-bottom: var(--bl-marginTop);}
  to {visibility: hidden; opacity: 0; transform: scale(0.9); height: 0; margin-bottom: 0;}
}

@keyframes animateItemsAddEntry {
  from {transform: translateY(calc((var(--bl-EntryHeight) + var(--bl-marginTop)) * (-1)));}
  to {transform: translateY(0);}
}

@keyframes animateAddEntry {
  from {transform: translateY(calc((var(--bl-EntryHeight) + var(--bl-marginTop)) * (-1))); opacity: 0;}
  50% {opacity: .3;}
  to {opacity: 1; transform: translateY(0);}
}
